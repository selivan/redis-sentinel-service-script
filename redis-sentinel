#!/bin/bash
### BEGIN INIT INFO
# Provides:          redis sentinel
# Required-Start:    $all
# Required-Stop:     $network
# Default-Start:    2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Starts redis sentinel
# Description:       Starts redis sentinel
### END INIT INFO

# Required lines in sentinel.conf:
# daemonize yes
# pidfile "/var/run/redis/sentinel.pid"

NAME=redis-sentinel
DAEMON=/usr/bin/redis-sentinel
DAEMON_ARGS=/etc/redis/sentinel.conf
USER=redis
GROUP=redis
RUNDIR=/var/run/redis
PIDFILE="$RUNDIR"/sentinel.pid

start() {
        echo "Starting $NAME ..."
        mkdir -p "$RUNDIR"
        chown "$USER":"$GROUP" "$RUNDIR" "$PIDFILE"
        # --oknodo  Return exit status 0 instead of 1 if no actions are (would be) taken.
        start-stop-daemon --start --exec "$DAEMON" --pidfile "$PIDFILE" --chuid "$USER":"$GROUP" --oknodo -- "$DAEMON_ARGS"
}

stop() {
        echo "Stopping $NAME ..."
        start-stop-daemon --stop --exec "$DAEMON" --pidfile "$PIDFILE"
}

restart() {
        echo "Restarting $NAME ..."
        stop
        start
}

status() {
        start-stop-daemon --status --exec "$DAEMON" --chuid "$USER":"$GROUP" --pidfile "$PIDFILE"
        if [ $? -eq 0 ]; then
            echo "Sentinel is running, pid $(cat $PIDFILE)"
        else
            echo "Sentinel is not running"
        fi
}

case "$1" in
        start)
                start
                ;;
        stop)
                stop
                ;;
        restart)
                restart
                ;;
        status)
                status
                ;;
        *)
                echo "Usage $0 {start|stop|restart|status}"
esac
